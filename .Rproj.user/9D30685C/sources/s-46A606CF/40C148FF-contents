## One-way ANOVA

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library(ggplot2)
library(ggridges)
library(formattable)
library(knitr)
data(xxxData, package="carData")

```


```{r calculate tables and statistics}
xxxData$xxxIV <- factor(xxxData$xxxIV)
fit.lm <- lm(xxxDV ~ xxxIV, xxxData)
summary.lm <- summary(fit.lm)
dv <- summary.lm$call$formula[[2]]
iv <- summary.lm$call$formula[[3]]

F <- summary.lm$fstatistic[[1]]
dfn <- summary.lm$fstatistic[[2]]
dfd <- summary.lm$fstatistic[[3]]
p <- pf(F, dfn, dfd,lower.tail=FALSE)
p.formated <-  format.pval(p)
r2 <- summary.lm$r.squared
anova_table<- anova(fit.lm)
anova_table$`Pr(>F)` <- format.pval(anova_table$`Pr(>F)`)

if (p < .05){
  significance = "significant"
} else{
  significance = "nonsignificant"
}

if (p < .001) {
  p_reported = "p < .001"
} else if (p < .01) {
  p_reported = "p < .01"
} else if (p < .05) {
  p_reported = "p < .05"
} else {
  p_reported = "p > .05"
}

stats <- function(x) c(n=length(x),
                       mean=mean(x, na.rm=TRUE),
                       sd=sd(x, na.rm=TRUE),
                       min=min(x, na.rm=TRUE),
                       max=max(x, na.rm=TRUE))

sum_stats <- aggregate(xxxData$xxxDV, 
                       by=list(xxxData$xxxIV), 
                       FUN=stats)

sum_stats <- data.frame(group=sum_stats$Group.1,
                        n    = sum_stats$x[, 1],
                        mean = sum_stats$x[, 2],
                        sd   = sum_stats$x[, 3],
                        min  = sum_stats$x[, 4],
                        max  = sum_stats$x[, 5])

sum_stats$mean <- round(sum_stats$mean, 2)
sum_stats$sd  <- round(sum_stats$sd, 2)

mcp <- TukeyHSD(aov(fit.lm))
mcp_table <- round(as.data.frame(mcp$xxxIV), 3)
names(mcp_table)[4] <- "p"
mcp_table$sig <- ""

add_stars <- function(x){
  if (x <= .001) {
    sig = "\\***"
  } else if (x <= .01) {
    sig = "\\**"
  } else if (x <= .05) {
    sig = "\\*"
  } else {
    sig =""
  }
  return(sig)
}

add_stars <- Vectorize(add_stars)
mcp_table$sig <- add_stars(mcp_table$p)

y <- "xxxDV"
x <- "xxxIV"

```

A one-way analysis of variance on **`r y`** by **`r x`** found
a `r significance` difference between groups,
F(`r dfn`, `r dfd` ) = `r round(F, 2)`, `r p_reported`.

</br>
  
<style type="text/css">
  .table {
    
    width: 80%;
    
  }
</style>
  
### Summary Statistics
  
  Groups with average outcomes above the median are colored red.

```{r, summary statistics}
formattable(sum_stats,
            align = c("l", rep("r", NCOL(sum_stats) - 1)),
            list(mean = formatter("span", 
                                  style = function(x) ifelse(x > median(x), 
                                                             "color:red", NA))))
```

</br>
  
  
### ANOVA Table
  
```{r, anova table}

formattable(anova_table)

```

</br>
  
### Test Assumptions
  
#### Normality
  
Normality can be assessed via a quantile-quantile plot. 
Normally distributed residuals will fall close to the line. ANOVA is robust to violations of normality when sample sizes are approximately equal.

```{r, normality}
library(ggpubr)
ggqqplot(xxxData$xxxDV)

```

#### Homogeneity of Variances

```{r, levene}
library(car)
homogen <- leveneTest(xxxData$xxxDV, xxxData$xxxIV)
dfn <- homogen[1,1]
dfd <- homogen[2,1]
F <- round( homogen[1,2], 3)
p <- format.pval(homogen[1,3])

```
Equal variances can be assessed with a Levine Test,
F(`r dfn`, `r dfd`) = `r F`, p < `r p`.
A significant result suggests rejecting homogeneity of variances.
ANOVA is robust to violations of this assumption when group 
sizes are approximately equal.

</br>
  
### Post-hoc Comparisons
  
Comparisons of groups 2 at a time. Probabilities are adjusted for 
multiple comparisons using the Tukey Honestly Significant Difference method.

```{r, posthoc}
unit.scale = function(x) {
  x <- abs(x)
  (x - min(x)) / (max(x) - min(x))
}
formattable(mcp_table,
            list(diff = color_bar("skyblue", fun = unit.scale)))


```
#### Box Plots

Boxes capture the middle 50 percent of scores. Horizontal lines 
within the boxes are medians. The wiskers capture roughly 99% of scores and the points display outliers.

</br>
  
  
```{r boxplots}
xxxData$xxxIV <- reorder(xxxData$xxxIV, xxxData$xxxDV,
                         mean, na.rm = TRUE)
ggplot(xxxData,
       aes(y = xxxDV,
           x = xxxIV,
           fill = xxxIV)) +
  geom_boxplot() +
  theme_minimal() +
  theme(legend.position = "none")
```
